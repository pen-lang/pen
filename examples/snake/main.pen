import Console'Print
import Os'Context { Context }
import Os'File
import Os'Process
import Os'Time

type input = [string | none | error]

fps = \() number { 120 }

rows = \() number { 40 }

columns = \() number { 80 }

main = \(ctx context) none {
  Process'Exit(
    ctx.Os,
    if e = run(ctx) as none {
      0
    } else {
      _ = Print'Line(ctx.Os, if s = source(e) as string { s } else { "unknown error" })

      1
    },
  )
}

run = \(ctx context) none | error {
  ctx = ctx.Os

  Process'Run(ctx, "stty", [string "raw", "-echo"])?
  step(ctx, input(ctx))?
  Process'Run(ctx, "stty", [string "-raw", "echo"])?
}

step = \(ctx Context, input input) none | error {
  if [x, ...input] = input {
    if x = x() as string {
      if x == "q" {
        none
      } else {
        File'Write(ctx, File'StdOut(), x)?
        step(ctx, input)
      }
    } else if none {
      step(ctx, input)
    } else if error {
      x
    }
  } else {
    none
  }
}

input = \(ctx Context) input {
  race(
    [[string | none | error]
      [string | none | error ...keys(ctx)],
      [string | none | error ...frames(ctx)],
    ],
  )
}

keys = \(ctx Context) [string | error] {
  [string | error File'ReadLimit(ctx, File'StdIn(), 1), ...keys(ctx)]
}

frames = \(ctx Context) [none] {
  [none Time'Sleep(ctx, 1000 / fps()), ...frames(ctx)]
}
