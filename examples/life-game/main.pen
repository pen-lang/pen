import Core'String
import System'Context { Context }
import System'File

rows = \() number { 10 }
columns = \() number { 20 }

main = \(ctx Context) number {
  if e =  run(ctx) as none {
    0
  } else {
    1
  }
}

run = \(ctx Context) none | error {
  step(ctx, initializeRows(rows(), columns()))
}

step = \(ctx Context, rows [[boolean]]) none | error {
  File'Write(ctx, File'StdOut(), renderRows(rows))?
  File'Write(ctx, File'StdOut(), "\x1bc")?

  step(ctx, calculateNextRows(rows))
}

calculateNextRows = \(rows [[boolean]]) [[boolean]] {
  # TODO
  rows
}

initializeRows = \(rows number, columns number) [[boolean]] {
  if rows == 0 {
    [[boolean]]
  } else {
    [[boolean] initializeRow(columns), ...initializeRows(rows - 1, columns)]
  }
}

initializeRow = \(columns number) [boolean] {
  if columns == 0 {
    [boolean]
  } else {
    [boolean false, ...initializeRow(columns - 1)]
  }
}

renderRows = \(rs [[boolean]]) string {
  if [r, ...rs] = rs {
    String'Join([string renderRow(r()), renderRows(rs)], "\n")
  } else {
    ""
  }
}

renderRow = \(xs [boolean]) string {
  if [x, ...xs] = xs {
    String'Join([string renderCell(x()), renderRow(xs)], "")
  } else {
    ""
  }
}

renderCell = \(cell boolean) string {
  if cell {
    "o"
  } else {
    "."
  }
}
