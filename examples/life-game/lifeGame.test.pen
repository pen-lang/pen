import Core'String
import Test'Assert
import 'lifeGame

Render3x4 = \() none | error {
  Assert'EqualStrings(
    lifeGame'Render(lifeGame'Initialize(3, 4)),
    String'Join(
      [string
        "....",
        "....",
        "....\n",
      ],
      "\n",
    )
  )
}

Render4x4 = \() none | error {
  Assert'EqualStrings(
    lifeGame'Render(lifeGame'Initialize(4, 4)),
    String'Join(
      [string
        "....",
        "....",
        "....",
        "....\n",
      ],
      "\n",
    )
  )
}

RenderLife = \() none | error {
  Assert'EqualStrings(
    lifeGame'Render([[boolean]
      [boolean false, false, false],
      [boolean false, true, false],
      [boolean false, false, false],
    ]),
    String'Join(
      [string
        "...",
        ".o.",
        "...\n",
      ],
      "\n",
    )
  )
}

RenderTwoLives = \() none | error {
  Assert'EqualStrings(
    lifeGame'Render([[boolean]
      [boolean false, true, false],
      [boolean false, false, false],
      [boolean false, false, true],
    ]),
    String'Join(
      [string
        ".o.",
        "...",
        "..o\n",
      ],
      "\n",
    )
  )
}

StepEmpty3x3 = \() none | error {
  Assert'EqualStrings(
    lifeGame'Render(lifeGame'Step(lifeGame'Initialize(3, 3))?),
    lifeGame'Render(lifeGame'Initialize(3, 3)),
  )
}
