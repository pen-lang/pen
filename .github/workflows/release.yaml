name: release
on:
  push:
    branches:
      - main
  pull_request:
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true
jobs:
  tag_check:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ env.version }}
      should_release: ${{ env.should_release }}
    steps:
      - uses: actions/checkout@v2
      - run: echo version=$(tools/version.sh) >> $GITHUB_ENV
      - run: |
          git fetch --prune --unshallow --tags

          if [ ${{ github.ref }} = 'refs/heads/main' ] && ! git tag | grep v$version; then
            echo should_release=true >> $GITHUB_ENV
          fi
  build_asset:
    needs: tag_check
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - run: tools/ci/github/setup.sh
      - run: echo asset=$(tools/build_asset.sh) >> $GITHUB_ENV
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.asset }}
          path: ${{ env.asset }}
  release:
    needs:
      - tag_check
      - build_asset
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git log --pretty='- %s by %aN' $(git describe --tags --abbrev=0 HEAD^)..HEAD > changes.md
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v1
        if: needs.tag_check.outputs.should_release == 'true'
        with:
          tag_name: v${{ needs.tag_check.outputs.version }}
          body_path: changes.md
          files: artifacts/**
          fail_on_unmatched_files: true
  homebrew:
    needs:
      - tag_check
      - release
    if: needs.tag_check.outputs.should_release == 'true'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          repository: pen-lang/homebrew-pen
      - run: |
          file=Formula/pen.rb
          version=${{ needs.tag_check.outputs.version }}
          hash=$(curl -fsSL https://github.com/pen-lang/pen/archive/refs/tags/v$version.tar.gz | sha256sum | cut -f 1 -d ' ')

          sed -i "s/v[[0-9.]*.tar.gz/v$version.tar.gz/" $file
          sed -i "s/^  sha256 .*/  sha256 \"$hash\"/" $file
          sed -i /revision/d $file
      - uses: peter-evans/create-pull-request@v4
        with:
          title: Bump version
          branch: chore/version
          token: ${{ secrets.PR_CREATION_TOKEN }}
