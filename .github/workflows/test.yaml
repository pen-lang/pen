name: test
on:
  push:
    branches:
      - main
  pull_request:
concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - run: tools/ci/set_up_os.sh
      - run: cargo build --release --locked
      - run: git diff --exit-code
      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.os }}
          path: target/release/pen
  unit_test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: tools/ci/set_up_os.sh
      - run: tools/unit_test.sh
  feature_list:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.features.outputs.features }}
    steps:
      - uses: actions/checkout@v2
      - id: features
        run: echo ::set-output name=features::$(find features -name *.feature | jq -Rn '[inputs]')
  feature_tests:
    needs:
      - build
      - feature_list
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macos-latest
        feature: ${{ fromJSON(needs.feature_list.outputs.features) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - run: tools/ci/set_up_os.sh
      - uses: ruby/setup-ruby@v1
      - uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.os }}
          path: target/release
      - run: chmod +x target/release/pen
      - run: tools/integration_test.sh ${{ matrix.feature }}
  integration_test:
    runs-on: ubuntu-latest
    needs: feature_tests
    steps:
      - run: echo
