import Core'Boolean
import Core'Character
import Core'Number
import Core'String'Byte'View { View }
import Core'String'Utf8

Name = \(s string) boolean {
  Utf8'Length(s) != 0 & nameView(View'New(s))
}

nameView = \(v View) boolean {
  View'Length(v) == 0
    | Boolean'Any([boolean View'HasPrefix(v, s()) for s in validCharacters()])
      & nameView(View'Seek(v, 1))
}

validCharacters = \() [string] {
  [string
    ...[string
      Character'FromCodePoint(n())
      for n in Number'Range(Character'ToCodePoint("a"), Character'ToCodePoint("z"))
    ],
    "-",
  ]
}
