import 'Pool'Options { Options }
import 'Pool'pool { Pool }

import foreign _pen_sql_pool_create \(string, Options) Pool | error
import foreign _pen_sql_pool_query \(Pool, string, [any]) [any] | error
import foreign _pen_sql_pool_execute \(Pool, string, [any]) number | error

type Context {
  inner Inner
}

type Inner {
  CreatePool \(string, Options) Pool | error
  QueryPool \(Pool, string, [any]) [[any]] | error
  ExecutePool \(Pool, string, [any]) number | error
}

New = \() Context {
  Context{
    inner: Inner{
      CreatePool: _pen_sql_pool_create,
      QueryPool: \(p Pool, q string, vs [any]) [[any]] | error {
        rs = _pen_sql_pool_query(p, q, vs)?

        [[any] if r = r() as [any] { r } else { [any] } for r in rs]
      },
      ExecutePool: _pen_sql_pool_execute,
    },
  }
}

Inner = \(ctx Context) Inner {
  ctx.inner
}
