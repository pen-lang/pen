import Core'Number
import Core'String
import Core'String'Utf8

import 'Value { Value }

import foreign "c" _pen_json_encode_number \(number) string

type objectEntry {
  key string
  value Value
}

# Encode a JSON value.
Encode = \(v Value) string {
  String'Concatenate(value(v))
}

value = \(v Value) [string] {
  if v = Value'Raw(v) as number {
    [string _pen_json_encode_number(v)]
  } else if boolean {
    [string if v { "true" } else { "false" }]
  } else if none {
    [string "null"]
  } else if string {
    string(v)
  } else if [Value] {
    array(v)
  } else if {string: Value} {
    object(v)
  }
}

string = \(s string) [string] {
  s = Utf8'Replace(s, "\\", "\\\\")
  s = Utf8'Replace(s, "\"", "\\\"")

  [string "\"", s, "\""]
}

array = \(vs [Value]) [string] {
  if [_, ...ss] = arrayElements(vs) {
    [string "[", ...ss, "]"]
  } else {
    [string "[]"]
  }
}

arrayElements = \(vs [Value]) [string] {
  if [v, ...vs] = vs {
    [string ",", ...value(v()), ...arrayElements(vs)]
  } else {
    [string]
  }
}

object = \(vs {string: Value}) [string] {
  [string
    "{",
    ...[string
      s()
      for s in [string
        if i() == 1 { "" } else { "," },
        ...string(k()),
        ":",
        ...value(v()),
      ]
      for k, v, i in keys(vs), values(vs), Number'Sequence(Number'Infinity())
    ],
    "}",
  ]
}
