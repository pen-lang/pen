# This module provides command-line flag parsing.
#
# The flags have the following formats:
#
# - `-foo bar`: a named flag of a key `foo` with a value `bar`
# - `foo`: a positional flag of a value `foo`
#
# Named flags and positional flags are separated by `--` optionally.

import Core'Number
import Core'String
import Core'String'Byte

# A set of flags
type Set {
  Named {string: string}
  Positional [string]
}

prefix = \() string { "-" }

separator = \() string { "--" }

# Parse flags.
Parse = \(ss [string]) Set | error {
  parse(ss, {string: string})
}

parse = \(ss [string], ns {string: string}) Set | error {
  if [s, ...ss] = ss {
    if s() == separator() {
      Set{Named: ns, Positional: ss}
    } else if String'HasPrefix(s(), prefix()) {
      if [v, ...ss] = ss {
        parse(
          ss,
          {string: string
            ...ns,
            Byte'Slice(
              s(),
              Byte'Length(prefix()) + 1,
              Number'Infinity(),
            ): v(),
          },
        )
      } else {
        error("flag value missing")
      }
    } else {
      Set{Named: ns, Positional: [string s(), ...ss]}
    }
  } else {
    Set{Named: ns, Positional: ss}
  }
}
