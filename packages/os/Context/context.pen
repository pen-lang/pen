import 'File'Metadata { Metadata }
import 'File'OpenOptions { OpenOptions }
import 'Tcp'AcceptedStream as Tcp
import 'Tcp'Listener as Tcp
import 'Tcp'Stream as Tcp
import 'Udp'Datagram as Udp
import 'Udp'Socket as Udp
import 'normalFile { NormalFile }

import foreign _pen_os_read_stdin \() string | error
import foreign _pen_os_read_limit_stdin \(number) string | error
import foreign _pen_os_write_stdout \(string) number | error
import foreign _pen_os_write_stderr \(string) number | error
import foreign _pen_os_open_file \(string, OpenOptions) NormalFile | error
import foreign _pen_os_read_file \(NormalFile) string | error
import foreign _pen_os_read_limit_file \(NormalFile, number) string | error
import foreign _pen_os_write_file \(NormalFile, string) number | error
import foreign _pen_os_copy_file \(string, string) none | error
import foreign _pen_os_move_file \(string, string) none | error
import foreign _pen_os_remove_file \(string) none | error
import foreign _pen_os_read_directory \(string) [any] | error
import foreign _pen_os_create_directory \(string) none | error
import foreign _pen_os_remove_directory \(string) none | error
import foreign "c" _pen_os_get_arguments \() [string]
import foreign "c" _pen_os_get_environment_variable \(string) string | error
import foreign _pen_os_read_metadata \(string) Metadata | error
import foreign _pen_os_tcp_bind \(string) Tcp'Listener | error
import foreign _pen_os_tcp_connect \(string) Tcp'Stream | error
import foreign _pen_os_tcp_accept \(Tcp'Listener) Tcp'AcceptedStream | error
import foreign _pen_os_tcp_receive \(Tcp'Stream, number) string | error
import foreign _pen_os_tcp_send \(Tcp'Stream, string) number | error
import foreign _pen_os_udp_bind \(string) Udp'Socket | error
import foreign _pen_os_udp_connect \(Udp'Socket, string) none | error
import foreign _pen_os_udp_receive \(Udp'Socket) string | error
import foreign _pen_os_udp_receive_from \(Udp'Socket) Udp'Datagram | error
import foreign _pen_os_udp_send \(Udp'Socket, string) number | error
import foreign _pen_os_udp_send_to \(Udp'Socket, string, string) number | error
import foreign "c" _pen_os_get_time \() number
import foreign _pen_os_sleep \(number) none
import foreign _pen_os_exit \(number) none
import foreign _pen_os_run_command \(string, [string]) none | error

type Context {
  inner InnerContext
}

type InnerContext {
  ReadStdIn \() string | error
  ReadLimitStdIn \(number) string | error
  WriteStdOut \(string) number | error
  WriteStdErr \(string) number | error
  OpenFile \(string, OpenOptions) NormalFile | error
  ReadFile \(NormalFile) string | error
  ReadLimitFile \(NormalFile, number) string | error
  WriteFile \(NormalFile, string) number | error
  CopyFile \(string, string) none | error
  MoveFile \(string, string) none | error
  RemoveFile \(string) none | error
  ReadDirectory \(string) [string] | error
  CreateDirectory \(string) none | error
  RemoveDirectory \(string) none | error
  GetArguments \() [string]
  GetEnvironmentVariable \(string) string | error
  Metadata \(string) Metadata | error
  TcpBind \(string) Tcp'Listener | error
  TcpConnect \(string) Tcp'Stream | error
  TcpAccept \(Tcp'Listener) Tcp'AcceptedStream | error
  TcpReceive \(Tcp'Stream, number) string | error
  TcpSend \(Tcp'Stream, string) number | error
  UdpBind \(string) Udp'Socket | error
  UdpConnect \(Udp'Socket, string) none | error
  UdpReceive \(Udp'Socket) string | error
  UdpReceiveFrom \(Udp'Socket) Udp'Datagram | error
  UdpSend \(Udp'Socket, string) number | error
  UdpSendTo \(Udp'Socket, string, string) number | error
  GetTime \() number
  Sleep \(number) none
  Exit \(number) none
  RunCommand \(string, [string]) none | error
}

UnsafeNew = \() Context {
  Context{
    inner: InnerContext{
      ReadStdIn: _pen_os_read_stdin,
      ReadLimitStdIn: _pen_os_read_limit_stdin,
      WriteStdOut: _pen_os_write_stdout,
      WriteStdErr: _pen_os_write_stderr,
      OpenFile: _pen_os_open_file,
      ReadFile: _pen_os_read_file,
      ReadLimitFile: _pen_os_read_limit_file,
      WriteFile: _pen_os_write_file,
      CopyFile: _pen_os_copy_file,
      MoveFile: _pen_os_move_file,
      RemoveFile: _pen_os_remove_file,
      ReadDirectory: \(d string) [string] | error {
        ss = _pen_os_read_directory(d)?

        [string if s = s() as string { s } else { "" } for s in ss]
      },
      CreateDirectory: _pen_os_create_directory,
      RemoveDirectory: _pen_os_remove_directory,
      GetArguments: _pen_os_get_arguments,
      GetEnvironmentVariable: _pen_os_get_environment_variable,
      Metadata: _pen_os_read_metadata,
      TcpBind: _pen_os_tcp_bind,
      TcpConnect: _pen_os_tcp_connect,
      TcpAccept: _pen_os_tcp_accept,
      TcpReceive: _pen_os_tcp_receive,
      TcpSend: _pen_os_tcp_send,
      UdpBind: _pen_os_udp_bind,
      UdpConnect: _pen_os_udp_connect,
      UdpReceive: _pen_os_udp_receive,
      UdpReceiveFrom: _pen_os_udp_receive_from,
      UdpSend: _pen_os_udp_send,
      UdpSendTo: _pen_os_udp_send_to,
      GetTime: _pen_os_get_time,
      Sleep: _pen_os_sleep,
      Exit: _pen_os_exit,
      RunCommand: _pen_os_run_command,
    },
  }
}

Inner = \(ctx Context) InnerContext {
  ctx.inner
}
