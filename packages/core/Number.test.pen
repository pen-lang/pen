import Test'Assert

import 'Number

AbsolutePositive = \() none | error {
  Assert'Equal(Number'Absolute(1), 1)
}

AbsoluteNegative = \() none | error {
  Assert'Equal(Number'Absolute(-1), 1)
}

Epsilon = \() none | error {
  Assert'True(Number'Epsilon() < 0.000000000001)
}

Exponential = \() none | error {
  Assert'True(Number'Exponential(1) > 2.5)?
  Assert'True(Number'Exponential(1) < 3)?
  Assert'True(Number'Exponential(2) > 7)?
  Assert'True(Number'Exponential(2) < 8)?
}

FractionPositive = \() none | error {
  Assert'Equal(Number'Fraction(0.5), 0.5)
}

FractionNegative = \() none | error {
  Assert'Equal(Number'Fraction(-0.5), -0.5)
}

Parse = \() none | error {
  Assert'Equal(Number'Parse("42")?, 42)?
  Assert'Equal(Number'Parse("0.5")?, 0.5)
}

RoundLarge = \() none | error {
  Assert'Equal(Number'Round(1.1), 1)
}

RoundSmall = \() none | error {
  Assert'Equal(Number'Round(0.9), 1)
}

TruncateLarge = \() none | error {
  Assert'Equal(Number'Truncate(1.1), 1)
}

TruncateSmall = \() none | error {
  Assert'Equal(Number'Truncate(0.9), 0)
}
