import Test'Assert

import 'String'Byte'View

StartsWith = \() none | error {
  Assert'True(View'StartsWith(View'New("foo"), "foo"))
}

StartsWithInMiddle = \() none | error {
  Assert'True(View'StartsWith(View'Seek(View'New("foo"), 1), "oo"))
}

Length = \() none | error {
  Assert'Equal(View'Length(View'New("foo")), 3)
}

ToString = \() none | error {
  Assert'Equal(View'ToString(View'New("foo")), "foo")
}

Seek = \() none | error {
  Assert'Equal(View'ToString(View'Seek(View'New("foo"), 1)), "oo")
}

SeekToBeforeEnd = \() none | error {
  Assert'Equal(View'ToString(View'Seek(View'New("foo"), 2)), "o")
}

SeekToEnd = \() none | error {
  Assert'Equal(View'ToString(View'Seek(View'New("foo"), 3)), "")
}

Slice = \() none | error {
  Assert'Equal(View'ToString(View'Slice(View'New("hello"), 2, 4)), "ell")
}

SliceBeforeEnd = \() none | error {
  Assert'Equal(View'ToString(View'Slice(View'New("hello"), 5, 5)), "o")
}

SliceToEnd = \() none | error {
  Assert'Equal(View'ToString(View'Slice(View'New("hello"), 6, 5)), "")
}
