import 'array
import 'normalFile { NormalFile }
import 'File'OpenOptions { OpenOptions }
import 'File'Metadata { Metadata }
import 'Tcp'AcceptedStream as Tcp
import 'Tcp'Listener as Tcp
import 'Tcp'Stream as Tcp
import 'Udp'Datagram as Udp
import 'Udp'Socket as Udp

import foreign "c" _pen_os_read_stdin \() FfiStringResult
import foreign "c" _pen_os_read_limit_stdin \(number) FfiStringResult
import foreign "c" _pen_os_write_stdout \(string) FfiNumberResult
import foreign "c" _pen_os_write_stderr \(string) FfiNumberResult
import foreign "c" _pen_os_open_file \(string, OpenOptions) FfiOpenResult
import foreign "c" _pen_os_read_file \(NormalFile) FfiStringResult
import foreign "c" _pen_os_read_limit_file \(NormalFile, number) FfiStringResult
import foreign "c" _pen_os_write_file \(NormalFile, string) FfiNumberResult
import foreign "c" _pen_os_copy_file \(string, string) FfiNoneResult
import foreign "c" _pen_os_move_file \(string, string) FfiNoneResult
import foreign "c" _pen_os_remove_file \(string) FfiNoneResult
import foreign "c" _pen_os_read_directory \(string) FfiReadDirectoryResult
import foreign "c" _pen_os_create_directory \(string) FfiNoneResult
import foreign "c" _pen_os_remove_directory \(string) FfiNoneResult
import foreign "c" _pen_os_get_arguments \() array'Array
import foreign "c" _pen_os_get_environment_variable \(string) FfiStringResult
import foreign "c" _pen_os_read_metadata \(string) FfiMetadataResult
import foreign "c" _pen_os_tcp_bind \(string) FfiTcpListenerResult
import foreign "c" _pen_os_tcp_connect \(string) FfiTcpStreamResult
import foreign "c" _pen_os_tcp_accept \(Tcp'Listener) FfiTcpAcceptedStreamResult
import foreign "c" _pen_os_tcp_receive \(Tcp'Stream, number) FfiStringResult
import foreign "c" _pen_os_tcp_send \(Tcp'Stream, string) FfiNumberResult
import foreign "c" _pen_os_udp_bind \(string) FfiUdpSocketResult
import foreign "c" _pen_os_udp_connect \(Udp'Socket, string) FfiNoneResult
import foreign "c" _pen_os_udp_receive \(Udp'Socket) FfiStringResult
import foreign "c" _pen_os_udp_receive_from \(Udp'Socket) FfiUdpDatagramResult
import foreign "c" _pen_os_udp_send \(Udp'Socket, string) FfiNumberResult
import foreign "c" _pen_os_udp_send_to \(Udp'Socket, string, string) FfiNumberResult
import foreign "c" _pen_os_get_time \() number
import foreign "c" _pen_os_sleep \(number) none
import foreign "c" _pen_os_random_number \() number
import foreign "c" _pen_os_exit \(number) none

type Context {
  inner InnerContext
}

type InnerContext {
  ReadStdIn \() FfiStringResult
  ReadLimitStdIn \(number) FfiStringResult
  WriteStdOut \(string) FfiNumberResult
  WriteStdErr \(string) FfiNumberResult
  OpenFile \(string, OpenOptions) FfiOpenResult
  ReadFile \(NormalFile) FfiStringResult
  ReadLimitFile \(NormalFile, number) FfiStringResult
  WriteFile \(NormalFile, string) FfiNumberResult
  CopyFile \(string, string) FfiNoneResult
  MoveFile \(string, string) FfiNoneResult
  RemoveFile \(string) FfiNoneResult
  ReadDirectory \(string) FfiReadDirectoryResult
  CreateDirectory \(string) FfiNoneResult
  RemoveDirectory \(string) FfiNoneResult
  GetArguments \() array'Array
  GetEnvironmentVariable \(string) FfiStringResult
  Metadata \(string) FfiMetadataResult
  TcpBind \(string) FfiTcpListenerResult
  TcpConnect \(string) FfiTcpStreamResult
  TcpAccept \(Tcp'Listener) FfiTcpAcceptedStreamResult
  TcpReceive \(Tcp'Stream, number) FfiStringResult
  TcpSend \(Tcp'Stream, string) FfiNumberResult
  UdpBind \(string) FfiUdpSocketResult
  UdpConnect \(Udp'Socket, string) FfiNoneResult
  UdpReceive \(Udp'Socket) FfiStringResult
  UdpReceiveFrom \(Udp'Socket) FfiUdpDatagramResult
  UdpSend \(Udp'Socket, string) FfiNumberResult
  UdpSendTo \(Udp'Socket, string, string) FfiNumberResult
  GetTime \() number
  Sleep \(number) none
  RandomNumber \() number
  Exit \(number) none
}

type FfiOpenResult {
  File NormalFile
  Error string
}

type FfiStringResult {
  Value string
  Error string
}

type FfiNumberResult {
  Value number
  Error string
}

type FfiNoneResult {
  None none
  Error string
}

type FfiReadDirectoryResult {
  Paths array'Array
  Error string
}

type FfiMetadataResult {
  Metadata Metadata
  Error string
}

type FfiTcpListenerResult {
  Listener Tcp'Listener
  Error string
}

type FfiTcpStreamResult {
  Stream Tcp'Stream
  Error string
}

type FfiTcpAcceptedStreamResult {
  Stream Tcp'AcceptedStream
  Error string
}

type FfiUdpSocketResult {
  Socket Udp'Socket
  Error string
}

type FfiUdpDatagramResult {
  Datagram Udp'Datagram
  Error string
}

UnsafeNew = \() Context {
  Context{
    inner: InnerContext{
      ReadStdIn: _pen_os_read_stdin,
      ReadLimitStdIn: _pen_os_read_limit_stdin,
      WriteStdOut: _pen_os_write_stdout,
      WriteStdErr: _pen_os_write_stderr,
      OpenFile: _pen_os_open_file,
      ReadFile: _pen_os_read_file,
      ReadLimitFile: _pen_os_read_limit_file,
      WriteFile: _pen_os_write_file,
      CopyFile: _pen_os_copy_file,
      MoveFile: _pen_os_move_file,
      RemoveFile: _pen_os_remove_file,
      ReadDirectory: _pen_os_read_directory,
      CreateDirectory: _pen_os_create_directory,
      RemoveDirectory: _pen_os_remove_directory,
      GetArguments: _pen_os_get_arguments,
      GetEnvironmentVariable: _pen_os_get_environment_variable,
      Metadata: _pen_os_read_metadata,
      TcpBind: _pen_os_tcp_bind,
      TcpConnect: _pen_os_tcp_connect,
      TcpAccept: _pen_os_tcp_accept,
      TcpReceive: _pen_os_tcp_receive,
      TcpSend: _pen_os_tcp_send,
      UdpBind: _pen_os_udp_bind,
      UdpConnect: _pen_os_udp_connect,
      UdpReceive: _pen_os_udp_receive,
      UdpReceiveFrom: _pen_os_udp_receive_from,
      UdpSend: _pen_os_udp_send,
      UdpSendTo: _pen_os_udp_send_to,
      GetTime: _pen_os_get_time,
      Sleep: _pen_os_sleep,
      RandomNumber: _pen_os_random_number,
      Exit: _pen_os_exit
    }
  }
}

Inner = \(ctx Context) InnerContext {
  ctx.inner
}
