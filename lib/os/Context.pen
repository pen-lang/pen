import 'array
import 'normalFile { NormalFile }
import 'File'OpenOptions { OpenOptions }
import 'File'Metadata { Metadata }

import foreign "c" _pen_os_read_stdin \() FfiStringResult
import foreign "c" _pen_os_read_limit_stdin \(number) FfiStringResult
import foreign "c" _pen_os_write_stdout \(string) FfiWriteResult
import foreign "c" _pen_os_write_stderr \(string) FfiWriteResult
import foreign "c" _pen_os_open_file \(string, OpenOptions) FfiOpenResult
import foreign "c" _pen_os_read_file \(NormalFile) FfiStringResult
import foreign "c" _pen_os_read_limit_file \(NormalFile, number) FfiStringResult
import foreign "c" _pen_os_write_file \(NormalFile, string) FfiWriteResult
import foreign "c" _pen_os_copy_file \(string, string) FfiNoneResult
import foreign "c" _pen_os_move_file \(string, string) FfiNoneResult
import foreign "c" _pen_os_remove_file \(string) FfiNoneResult
import foreign "c" _pen_os_read_directory \(string) FfiReadDirectoryResult
import foreign "c" _pen_os_create_directory \(string) FfiNoneResult
import foreign "c" _pen_os_remove_directory \(string) FfiNoneResult
import foreign "c" _pen_os_get_arguments \() array'Array
import foreign "c" _pen_os_get_environment_variable \(string) FfiStringResult
import foreign "c" _pen_os_read_metadata \(string) FfiMetadataResult

type Context {
  inner InnerContext
}

type InnerContext {
  ReadStdIn \() FfiStringResult
  ReadLimitStdIn \(number) FfiStringResult
  WriteStdOut \(string) FfiWriteResult
  WriteStdErr \(string) FfiWriteResult
  OpenFile \(string, OpenOptions) FfiOpenResult
  ReadFile \(NormalFile) FfiStringResult
  ReadLimitFile \(NormalFile, number) FfiStringResult
  WriteFile \(NormalFile, string) FfiWriteResult
  CopyFile \(string, string) FfiNoneResult
  MoveFile \(string, string) FfiNoneResult
  RemoveFile \(string) FfiNoneResult
  ReadDirectory \(string) FfiReadDirectoryResult
  CreateDirectory \(string) FfiNoneResult
  RemoveDirectory \(string) FfiNoneResult
  GetArguments \() array'Array
  GetEnvironmentVariable \(string) FfiStringResult
  Metadata \(string) FfiMetadataResult
}

type FfiOpenResult {
  File NormalFile
  Error number
}

type FfiStringResult {
  Value string
  Error number
}

type FfiWriteResult {
  Count number
  Error number
}

type FfiNoneResult {
  None none
  Error number
}

type FfiReadDirectoryResult {
  Paths array'Array
  Error number
}

type FfiMetadataResult {
  Metadata Metadata
  Error number
}

New = \() Context {
  Context{
    inner: InnerContext{
      ReadStdIn: _pen_os_read_stdin,
      ReadLimitStdIn: _pen_os_read_limit_stdin,
      WriteStdOut: _pen_os_write_stdout,
      WriteStdErr: _pen_os_write_stderr,
      OpenFile: _pen_os_open_file,
      ReadFile: _pen_os_read_file,
      ReadLimitFile: _pen_os_read_limit_file,
      WriteFile: _pen_os_write_file,
      CopyFile: _pen_os_copy_file,
      MoveFile: _pen_os_move_file,
      RemoveFile: _pen_os_remove_file,
      ReadDirectory: _pen_os_read_directory,
      CreateDirectory: _pen_os_create_directory,
      RemoveDirectory: _pen_os_remove_directory,
      GetArguments: _pen_os_get_arguments,
      GetEnvironmentVariable: _pen_os_get_environment_variable,
      Metadata: _pen_os_read_metadata,
    }
  }
}

Inner = \(ctx Context) InnerContext {
  ctx.inner
}
