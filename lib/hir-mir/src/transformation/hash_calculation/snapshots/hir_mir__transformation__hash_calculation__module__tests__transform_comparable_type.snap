---
source: lib/hir-mir/src/transformation/hash_calculation/module.rs
expression: transform_module(&module)
---
Ok(
    Module {
        type_definitions: [],
        type_aliases: [
            TypeAlias {
                name: "a",
                original_name: "",
                type_: Map(
                    Map {
                        key: None(
                            None {
                                position: Position {
                                    path: "",
                                    line_number: 1,
                                    column_number: 1,
                                    line: "",
                                },
                            },
                        ),
                        value: None(
                            None {
                                position: Position {
                                    path: "",
                                    line_number: 1,
                                    column_number: 1,
                                    line: "",
                                },
                            },
                        ),
                        position: Position {
                            path: "",
                            line_number: 1,
                            column_number: 1,
                            line: "",
                        },
                    },
                ),
                public: false,
                external: false,
                position: Position {
                    path: "",
                    line_number: 1,
                    column_number: 1,
                    line: "",
                },
            },
        ],
        foreign_declarations: [],
        function_declarations: [],
        function_definitions: [
            FunctionDefinition {
                name: "hir:hash:d409c28886113c9b",
                original_name: "hir:hash:d409c28886113c9b",
                lambda: Lambda {
                    arguments: [
                        Argument {
                            name: "$x",
                            type_: Any(
                                Any {
                                    position: Position {
                                        path: "",
                                        line_number: 1,
                                        column_number: 1,
                                        line: "",
                                    },
                                },
                            ),
                        },
                    ],
                    result_type: Number(
                        Number {
                            position: Position {
                                path: "",
                                line_number: 1,
                                column_number: 1,
                                line: "",
                            },
                        },
                    ),
                    body: IfType(
                        IfType {
                            name: "$x",
                            argument: Variable(
                                Variable {
                                    name: "$x",
                                    position: Position {
                                        path: "",
                                        line_number: 1,
                                        column_number: 1,
                                        line: "",
                                    },
                                },
                            ),
                            branches: [
                                IfTypeBranch {
                                    type_: None(
                                        None {
                                            position: Position {
                                                path: "",
                                                line_number: 1,
                                                column_number: 1,
                                                line: "",
                                            },
                                        },
                                    ),
                                    expression: Number(
                                        Number {
                                            value: 0.0,
                                            position: Position {
                                                path: "",
                                                line_number: 1,
                                                column_number: 1,
                                                line: "",
                                            },
                                        },
                                    ),
                                },
                            ],
                            else_: None,
                            position: Position {
                                path: "",
                                line_number: 1,
                                column_number: 1,
                                line: "",
                            },
                        },
                    ),
                    position: Position {
                        path: "",
                        line_number: 1,
                        column_number: 1,
                        line: "",
                    },
                },
                foreign_definition_configuration: None,
                public: false,
                position: Position {
                    path: "",
                    line_number: 1,
                    column_number: 1,
                    line: "",
                },
            },
        ],
        position: Position {
            path: "",
            line_number: 1,
            column_number: 1,
            line: "",
        },
    },
)
