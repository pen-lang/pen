import 'Map

import foreign "c" _pen_core_hamt_hash_string \(string) number

type StringMap {
  map Map'Map
}

New = \() StringMap {
  StringMap{
    map: Map'New(
      \(x any, y any) boolean {
        if x = x as string {
          if y = y as string {
            x == y
          } else {
            false
          }
        } else {
          false
        }
      },
      \(x any) number {
        if x = x as string {
          _pen_core_hamt_hash_string(x)
        } else {
          0
        }
      }
    )
  }
}

Get = \(map StringMap, key string) string | none {
  if v = Map'Get(map.map, key, none) as string {
    v
  } else {
    none
  }
}

Set = \(map StringMap, key string, value string) StringMap {
  StringMap{map: Map'Set(map.map, key, value)}
}

Size = \(map StringMap) number {
  Map'Size(map.map)
}

Merge = \(x StringMap, y StringMap) StringMap {
  StringMap{map: Map'Merge(x.map, y.map)}
}

Keys = \(map StringMap) [string] {
  asStrings(Map'Keys(map.map))
}

Values = \(map StringMap) [string] {
  asStrings(Map'Values(map.map))
}

asStrings = \(xs [any]) [string] {
  if [x, ...xs] = xs {
    if x = x() as string {
      [string x, ...asStrings(xs)]
    } else {
      asStrings(xs)
    }
  } else {
    [string]
  }
}
