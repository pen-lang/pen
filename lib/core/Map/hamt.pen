import 'Bit
import 'Map'hash
import 'Map'emptyEntry { EmptyEntry }

type keyValue {
  key string
  value any
}

type Update {
  Hamt Hamt
  Updated boolean
}

type Entry = keyValue | Hamt | none

type Hamt {
  entry1 Entry
  entry2 Entry
  entry3 Entry
  entry4 Entry
  entry5 Entry
  entry6 Entry
  entry7 Entry
  entry8 Entry
  entry9 Entry
  entry10 Entry
  entry11 Entry
  entry12 Entry
  entry13 Entry
  entry14 Entry
  entry15 Entry
  entry16 Entry
  entry17 Entry
  entry18 Entry
  entry19 Entry
  entry20 Entry
  entry21 Entry
  entry22 Entry
  entry23 Entry
  entry24 Entry
  entry25 Entry
  entry26 Entry
  entry27 Entry
  entry28 Entry
  entry29 Entry
  entry30 Entry
  entry31 Entry
  entry32 Entry
}

New = \() Hamt {
  Hamt{
    entry1: none,
    entry2: none,
    entry3: none,
    entry4: none,
    entry5: none,
    entry6: none,
    entry7: none,
    entry8: none,
    entry9: none,
    entry10: none,
    entry11: none,
    entry12: none,
    entry13: none,
    entry14: none,
    entry15: none,
    entry16: none,
    entry17: none,
    entry18: none,
    entry19: none,
    entry20: none,
    entry21: none,
    entry22: none,
    entry23: none,
    entry24: none,
    entry25: none,
    entry26: none,
    entry27: none,
    entry28: none,
    entry29: none,
    entry30: none,
    entry31: none,
    entry32: none,
  }
}

Get = \(hamt Hamt, key string) any {
  getWithHash(hamt, key, hash'HashKey(key))
}

getWithHash = \(hamt Hamt, key string, hash number) any {
  # TODO
  EmptyEntry{}
}

Insert = \(hamt Hamt, key string, value any, layer number, level number) Update {
  # TODO
  Update{Hamt: hamt, Updated: false}
}

getEntry = \(hamt Hamt, index number) Entry {
  if index == 1 {
    hamt.entry1
  } else if index == 2 {
    hamt.entry2
  } else if index == 3 {
    hamt.entry3
  } else if index == 4 {
    hamt.entry4
  } else if index == 5 {
    hamt.entry5
  } else if index == 6 {
    hamt.entry6
  } else if index == 7 {
    hamt.entry7
  } else if index == 8 {
    hamt.entry8
  } else if index == 9 {
    hamt.entry9
  } else if index == 10 {
    hamt.entry10
  } else if index == 11 {
    hamt.entry11
  } else if index == 12 {
    hamt.entry12
  } else if index == 13 {
    hamt.entry13
  } else if index == 14 {
    hamt.entry14
  } else if index == 15 {
    hamt.entry15
  } else if index == 16 {
    hamt.entry16
  } else if index == 17 {
    hamt.entry17
  } else if index == 18 {
    hamt.entry18
  } else if index == 19 {
    hamt.entry19
  } else if index == 20 {
    hamt.entry20
  } else if index == 21 {
    hamt.entry21
  } else if index == 22 {
    hamt.entry22
  } else if index == 23 {
    hamt.entry23
  } else if index == 24 {
    hamt.entry24
  } else if index == 25 {
    hamt.entry25
  } else if index == 26 {
    hamt.entry26
  } else if index == 27 {
    hamt.entry27
  } else if index == 28 {
    hamt.entry28
  } else if index == 29 {
    hamt.entry29
  } else if index == 30 {
    hamt.entry30
  } else if index == 31 {
    hamt.entry31
  } else {
    hamt.entry32
  }
}

setEntry = \(hamt Hamt, index number, entry Entry) Hamt {
  hamt
}
