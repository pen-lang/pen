import foreign "c" _pen_core_bit_and \(number, number) number
import foreign "c" _pen_core_bit_or \(number, number) number
import foreign "c" _pen_core_bit_xor \(number, number) number
import foreign "c" _pen_core_bit_not \(number) number
import foreign "c" _pen_core_bit_left_shift \(number, number) number
import foreign "c" _pen_core_bit_right_shift \(number, number) number
import foreign "c" _pen_core_bit_to_integer_64 \(number) number
import foreign "c" _pen_core_bit_from_integer_64 \(number) number

And = \(x number, y number) number {
  _pen_core_bit_and(x, y)
}

Or = \(x number, y number) number {
  _pen_core_bit_or(x, y)
}

Xor = \(x number, y number) number {
  _pen_core_bit_xor(x, y)
}

Not = \(x number) number {
  _pen_core_bit_not(x)
}

LeftShift = \(x number, n number) number {
  _pen_core_bit_left_shift(x, n)
}

RightShift = \(x number, n number) number {
  _pen_core_bit_right_shift(x, n)
}

ToInteger64 = \(x number) number {
  _pen_core_bit_to_integer_64(x)
}

FromInteger64 = \(x number) number {
  _pen_core_bit_from_integer_64(x)
}
