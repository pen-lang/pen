import foreign "c" _pen_core_convert_number_to_string \(number) string
import foreign "c" _pen_core_power \(number, number) number
import foreign "c" _pen_core_remainder \(number, number) number
import foreign "c" _pen_core_square_root \(number) number

String = \(x number) string {
  _pen_core_convert_number_to_string(x)
}

Sum = \(ns [number]) number {
  sumRecursive(ns, 0)
}

sumRecursive = \(ns [number], m number) number {
  if [n, ...ns] = ns {
    sumRecursive(ns, m + n())
  } else {
    m
  }
}

Remainder = \(x number, y number) number {
  _pen_core_remainder(x, y)
}

Power = \(x number, y number) number {
  _pen_core_power(x, y)
}

SquareRoot = \(x number) number {
  _pen_core_square_root(x)
}
